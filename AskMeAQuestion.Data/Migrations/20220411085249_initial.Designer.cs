// <auto-generated />
using System;
using AskMeAQuestion.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AskMeAQuestion.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220411085249_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AskMeAQuestion.Data.Model.Participant", b =>
                {
                    b.Property<int>("ParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ParticipantAlreadyVoted")
                        .HasColumnType("bit");

                    b.Property<string>("ParticipantMail")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.HasKey("ParticipantId");

                    b.HasIndex("PollId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("AskMeAQuestion.Data.Model.Poll", b =>
                {
                    b.Property<int>("PollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("PollClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PollClosingKey")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("PollCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PollDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("PollMultipleAnswers")
                        .HasColumnType("bit");

                    b.Property<string>("PollParticipationKey")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("PollResultKey")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("PollTitle")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PollId");

                    b.HasIndex("UserId");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("AskMeAQuestion.Data.Model.Response", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.Property<string>("ResponseDescription")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("ResponseId");

                    b.HasIndex("PollId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("AskMeAQuestion.Data.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserMail")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserSession")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserLogin = "Admin",
                            UserMail = "tom.deoliv@outlook.com",
                            UserName = "ADMIN",
                            UserPassword = "irsY9YV0r94dmQpyGSSSGmbftcQYHnW+P6IAPu6EGv8="
                        });
                });

            modelBuilder.Entity("AskMeAQuestion.Data.Model.Vote", b =>
                {
                    b.Property<int>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("VoteId");

                    b.HasIndex("ResponseId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("AskMeAQuestion.Data.Model.Participant", b =>
                {
                    b.HasOne("AskMeAQuestion.Data.Model.Poll", "Poll")
                        .WithMany("Participants")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("AskMeAQuestion.Data.Model.Poll", b =>
                {
                    b.HasOne("AskMeAQuestion.Data.Model.User", "User")
                        .WithMany("Polls")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AskMeAQuestion.Data.Model.Response", b =>
                {
                    b.HasOne("AskMeAQuestion.Data.Model.Poll", "Poll")
                        .WithMany("Responses")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("AskMeAQuestion.Data.Model.Vote", b =>
                {
                    b.HasOne("AskMeAQuestion.Data.Model.Response", "Response")
                        .WithMany("Votes")
                        .HasForeignKey("ResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AskMeAQuestion.Data.Model.User", "User")
                        .WithMany("Votes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Response");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AskMeAQuestion.Data.Model.Poll", b =>
                {
                    b.Navigation("Participants");

                    b.Navigation("Responses");
                });

            modelBuilder.Entity("AskMeAQuestion.Data.Model.Response", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("AskMeAQuestion.Data.Model.User", b =>
                {
                    b.Navigation("Polls");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
